import { notFound } from "next/navigation";
import { NextIntlClientProvider } from "next-intl";
import LibraryProvider from "@/app/context/Library";
import Dayjs from "@/app/context/Dayjs";
import ReactQuery from "@/app/context/ReactQuery";
import { yekanFont, robotoFont } from "@/app/theme/fontFamily";
import "@/app/globals.scss";
import config from "@/app/library/config";
import type { Locale } from "@/app/library/config.types";

type LayoutProps = {
  params: {
    locale: Locale;
  };
  children: React.ReactNode;
};

const { locales } = config;
export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params: { locale },
}: LayoutProps) {
  //for access to locale inside layout we get it inside 'params' prop
  const targetLocale = locales.find((l) => l.value === locale);
  let translations;
  try {
    const libraryTranslations = (
      await import(`@/app/library/translations/${locale}.json`)
    ).default; //library translation
    const localTranslations = (
      await import(`@/app/translations/${locale}.json`)
    ).default; //our site translation
    translations = {
      ...libraryTranslations,
      ...localTranslations,
    };
  } catch (error) {
    notFound();
  }
  return (
    <html lang={targetLocale?.lang || "en-US"} dir={targetLocale?.dir || "ltr"}>
      <body
        className={`bg-background-main ${
          targetLocale?.value === "en" ? robotoFont.className : ""
        } ${targetLocale?.value === "fa" ? yekanFont.className : ""}`}
      >
        <NextIntlClientProvider locale={locale} messages={translations}>
          <LibraryProvider>
            <Dayjs>
              <ReactQuery>
                <main>{children}</main>
              </ReactQuery>
            </Dayjs>
          </LibraryProvider>
        </NextIntlClientProvider>
        <div id="portals"></div>
      </body>
    </html>
  );
}
